name: CI-E2E (Postgres)

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  e2e:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: todo_ci
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    env:
      # Point app/tests to CI Postgres (SQLAlchemy URL with psycopg3)
      DATABASE_URL: postgresql+psycopg://postgres:postgres@localhost:5432/todo_ci

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install PostgreSQL client (for sanity checks)
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Wait for Postgres and create database (idempotent)
        run: |
          for i in {1..20}; do
            if pg_isready -h localhost -p 5432 -U postgres; then
              echo "Postgres is ready"; break
            fi
            echo "Waiting for Postgres... ($i)"
            sleep 2
          done
          # Ensure DB exists
          psql "postgresql://postgres:postgres@localhost:5432/postgres" -c "SELECT 1;" || exit 1
          psql "postgresql://postgres:postgres@localhost:5432/postgres" -tc "SELECT 1 FROM pg_database WHERE datname = 'todo_ci';" | grep -q 1 || \
            psql "postgresql://postgres:postgres@localhost:5432/postgres" -c "CREATE DATABASE todo_ci;"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        working-directory: fastapi-todo
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Run tests (includes E2E on Postgres)
        working-directory: fastapi-todo
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: pytest -q
